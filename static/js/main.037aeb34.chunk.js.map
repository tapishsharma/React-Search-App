{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","href","rel","src","monster","id","alt","name","email","CardList","monsters","map","key","SearchBox","placeholder","handleChange","type","onChange","required","App","mon","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6UAGaA,G,YAAK,SAACC,GAAD,OAEjB,yBAAKC,UAAU,kBAChB,0BAAMC,KAAK,kJAAkJC,IAAI,eAC/J,yBACAC,IAAG,+BAA0BJ,EAAMK,QAAQC,GAAxC,0BACHC,IAAI,SAEN,4BAAKP,EAAMK,QAAQG,MACnB,2BAAIR,EAAMK,QAAQI,UCRLC,G,MAAS,SAAAV,GAAK,OAE3B,yBAAKC,UAAU,aAEND,EAAMW,SAASC,KAAI,SAAAP,GAAO,OAC7B,kBAAC,EAAD,CAAMQ,IAAKR,EAAQC,GAAID,QAASA,UCNzBS,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OAIxB,yBAAKf,UAAU,UACJ,2BACAgB,KAAK,SACXC,SAAUF,EACVD,YAAaA,EACbI,UAAQ,OCmCCC,E,kDAxCf,aAAc,IAAD,8BACX,gBAYEJ,aAAe,SAAAK,GACb,EAAKC,SAAS,CAACC,YAAYF,EAAIG,OAAOC,SAZ1C,EAAKC,MAAM,CACTf,SAAW,GACXY,YAAY,IAJH,E,qDAOX,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKT,SAAS,CAACX,SAASoB,S,oBAOvC,WACE,MAA6BC,KAAKN,MAA3Bf,EAAP,EAAOA,SAASY,EAAhB,EAAgBA,YACVU,EAAmBtB,EAASuB,QAAO,SAAA7B,GAAO,OAC/CA,EAAQG,KAAK2B,cAAcC,SAASb,EAAYY,kBAGjD,OACA,yBAAKlC,UAAU,OACd,wBAAIA,UAAU,SAAd,oBACC,kBAAC,EAAD,CACCe,aAAcgB,KAAKhB,aACnBD,YAAY,kBAEb,kBAAC,EAAD,CAAUJ,SAAUsB,S,GA/BRI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.037aeb34.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './card.styles.css';\r\n\r\nexport const Card=(props)=>(\r\n \r\n <div className=\"card-container\">\r\n<link href=\"https://fonts.googleapis.com/css2?family=Josefin+Sans:wght@500&family=Nunito:ital,wght@0,200;1,200&family=Roboto+Slab:wght@200;300&display=swap\" rel=\"stylesheet\"></link>\r\n  <img \r\n  src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} \r\n  alt='Oops' />\r\n\r\n<h1>{props.monster.name}</h1>\r\n<p>{props.monster.email}</p>\r\n </div>\r\n);\r\n","import React from \"react\";\r\nimport{Card} from '../card/card.component';\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList=props=>(\r\n\r\n<div className=\"card-list\"> \r\n   \r\n        {props.monsters.map(monster=> (\r\n      <Card key={monster.id} monster={monster}/>))}\r\n\r\n</div>\r\n);","import React from \"react\";\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder,handleChange})=>(\r\n\r\n\r\n\r\n <div className=\"search\">\r\n            <input \r\n            type=\"search\" \r\n      onChange={handleChange}\r\n      placeholder={placeholder} \r\n      required/>\r\n      </div>\r\n\r\n     \r\n     \r\n    \r\n\r\n\r\n\r\n\r\n\r\n);","import React,{Component} from 'react'\n\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\nimport {SearchBox} from './components/search-box/search-box.component'\n\nclass App extends Component{\nconstructor(){\n  super();\n  this.state={\n    monsters : [],\n    searchField:''\n  };\n}\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response=>response.json())\n    .then(users=>this.setState({monsters:users}))\n  }\n    //used Arrow Function to avoid specifying function in constructor using bind\n    handleChange = mon=>{\n      this.setState({searchField:mon.target.value})\n    }\n\n  render(){\n    const {monsters,searchField}=this.state;\n    const filteredMonsters = monsters.filter(monster=>\n     monster.name.toLowerCase().includes(searchField.toLowerCase())\n      );\n\n    return(\n    <div className='App'>\n     <h1 className='title'>Monsters Rolodex</h1>\n      <SearchBox \n       handleChange={this.handleChange}\n       placeholder=\"Enter Monster\"\n      />\n      <CardList monsters={filteredMonsters}/>\n    \n\n    \n      \n    </div>\n    );\n  }\n\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}